{
	"name": "df_DIMPRODUCTS_final_copy1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SQL_o_DIM2",
						"type": "DatasetReference"
					},
					"name": "ExistingTarget"
				},
				{
					"dataset": {
						"referenceName": "SQL_o_DIM2",
						"type": "DatasetReference"
					},
					"name": "Targetforcomparison"
				},
				{
					"dataset": {
						"referenceName": "DATE_FETCH_PRODUCTS",
						"type": "DatasetReference"
					},
					"name": "StartDateUpdatesource"
				},
				{
					"dataset": {
						"referenceName": "ds_products_sql",
						"type": "DatasetReference"
					},
					"name": "Products"
				},
				{
					"dataset": {
						"referenceName": "ds_categories_dql",
						"type": "DatasetReference"
					},
					"name": "Categories"
				},
				{
					"dataset": {
						"referenceName": "ds_Inventory_sql",
						"type": "DatasetReference"
					},
					"name": "Inventory"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DATE_FETCH_PRODUCTS",
						"type": "DatasetReference"
					},
					"name": "EndDatetobeFetchedagain"
				},
				{
					"dataset": {
						"referenceName": "SQL_o_DIM2",
						"type": "DatasetReference"
					},
					"name": "InsertNewRecord"
				},
				{
					"dataset": {
						"referenceName": "SQL_o_DIM2",
						"type": "DatasetReference"
					},
					"name": "OLDrecordCRI0"
				},
				{
					"dataset": {
						"referenceName": "SQL_o_DIM2",
						"type": "DatasetReference"
					},
					"name": "UpdateOldRecord"
				}
			],
			"transformations": [
				{
					"name": "hashkeySRC"
				},
				{
					"name": "CRI1"
				},
				{
					"name": "hashkeyTarget"
				},
				{
					"name": "MAXSURROGATEKEY"
				},
				{
					"name": "Join1"
				},
				{
					"name": "TarappendedtoSINK"
				},
				{
					"name": "Lookup1"
				},
				{
					"name": "ConditionalSplit1"
				},
				{
					"name": "addSDisRUD"
				},
				{
					"name": "CIR1"
				},
				{
					"name": "UPDATEDRECORD"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "alterRow1"
				},
				{
					"name": "joinOLDRECORD"
				},
				{
					"name": "filter1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "alterRow2"
				},
				{
					"name": "filter2"
				},
				{
					"name": "select3"
				},
				{
					"name": "joinforstartdate"
				},
				{
					"name": "fetchstartdate"
				},
				{
					"name": "filter3"
				},
				{
					"name": "select4"
				},
				{
					"name": "select5"
				},
				{
					"name": "OLDRECORD"
				},
				{
					"name": "URECORD"
				},
				{
					"name": "selectUPDATED"
				},
				{
					"name": "select7"
				},
				{
					"name": "selectcategory"
				},
				{
					"name": "joinProductCategory"
				},
				{
					"name": "selectInventory"
				},
				{
					"name": "select8"
				},
				{
					"name": "joinProductInventory"
				},
				{
					"name": "csvProducts"
				},
				{
					"name": "ProductTable"
				}
			],
			"script": "parameters{\n\tCOLUMNS as string ('CATEGORY_NAME,TITLE,ACTOR')\n}\nsource(output(\n\t\tS_KEY as integer,\n\t\tPRODUCT_ID as integer,\n\t\tCATEGORY_ID as integer,\n\t\tCATEGORY_NAME as string,\n\t\tTITLE as string,\n\t\tACTOR as string,\n\t\tPRICE as string,\n\t\tSPECIAL as integer,\n\t\tCOMMON_PROD_ID as integer,\n\t\tQUAN_IN_STOCK as integer,\n\t\tSALES as integer,\n\t\tROW_INSERTED_DATE as date,\n\t\tROW_UPDATED_DATE as date,\n\t\tROW_INSERTED_BY as integer,\n\t\tROW_UPDATED_BY as integer,\n\t\tSTART_DATE as date,\n\t\tEND_DATE as date,\n\t\tCURRENT_RECORD_INDICATOR as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ExistingTarget\nsource(output(\n\t\tS_KEY as integer,\n\t\tPRODUCT_ID as integer,\n\t\tCATEGORY_ID as integer,\n\t\tCATEGORY_NAME as string,\n\t\tTITLE as string,\n\t\tACTOR as string,\n\t\tPRICE as string,\n\t\tSPECIAL as integer,\n\t\tCOMMON_PROD_ID as integer,\n\t\tQUAN_IN_STOCK as integer,\n\t\tSALES as integer,\n\t\tROW_INSERTED_DATE as date,\n\t\tROW_UPDATED_DATE as date,\n\t\tROW_INSERTED_BY as integer,\n\t\tROW_UPDATED_BY as integer,\n\t\tSTART_DATE as date,\n\t\tEND_DATE as date,\n\t\tCURRENT_RECORD_INDICATOR as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Targetforcomparison\nsource(output(\n\t\tPRODUCT_ID as integer,\n\t\tSTART_DATE as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> StartDateUpdatesource\nsource(output(\n\t\tPROD_ID as integer,\n\t\tCATEGORY_ID as integer,\n\t\tTITLE as string,\n\t\tACTOR as string,\n\t\tPRICE as string,\n\t\tSPECIAL as integer,\n\t\tCOMMON_PROD_ID as integer,\n\t\tROW_INSERTED_DATE as date,\n\t\tROW_UPDATED_DATE as date,\n\t\tROW_INSERTED_BY as integer,\n\t\tROW_UPDATED_BY as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Products\nsource(output(\n\t\tCATEGORY_ID as integer,\n\t\tCATEGORY_NAME as string,\n\t\tROW_INSERTED_DATE as date,\n\t\tROW_INSERTED_BY as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Categories\nsource(output(\n\t\tPROD_ID as integer,\n\t\tQUAN_IN_STOCK as integer,\n\t\tSALES as integer,\n\t\tROW_INSERTED_DATE as date,\n\t\tROW_UPDATED_DATE as date,\n\t\tROW_INSERTED_BY as integer,\n\t\tROW_UPDATED_BY as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> Inventory\nselect7 derive(columnhashSRC = md5(byNames(split($COLUMNS,','))),\n\t\tIntValSRC = md5(PRICE,SPECIAL,COMMON_PROD_ID,QUAN_IN_STOCK,SALES)) ~> hashkeySRC\nExistingTarget filter(CURRENT_RECORD_INDICATOR == 1) ~> CRI1\nCRI1 derive(columnhashTarget = md5(byNames(split($COLUMNS,','))),\n\t\tIntValTar = md5(PRICE,SPECIAL,COMMON_PROD_ID,QUAN_IN_STOCK,SALES)) ~> hashkeyTarget\nselect4 aggregate(MAXSURROGATEKEY = max(Exists_S_KEY)) ~> MAXSURROGATEKEY\nhashkeySRC, MAXSURROGATEKEY join(1==1,\n\tjoinType:'cross',\n\tbroadcast: 'auto')~> Join1\nCIR1@CIR1 select(mapColumn(\n\t\teach(match(true()),\n\t\t\t'Tar_'+$$ = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TarappendedtoSINK\nJoin1, TarappendedtoSINK lookup(PRODUCT_ID == Tar_PRODUCT_ID,\n\tmultiple: false,\n\tpickup: 'any',\n\tbroadcast: 'auto')~> Lookup1\nLookup1 split(isNull(Tar_PRODUCT_ID),\n\tdisjoint: false) ~> ConditionalSplit1@(NEWRECORD, EXISTSRECORD)\nConditionalSplit1@NEWRECORD derive(START_DATE = ROW_UPDATED_DATE,\n\t\tEND_DATE = toDate('9999-12-31'),\n\t\tCURRENT_RECORD_INDICATOR = 1) ~> addSDisRUD\nTargetforcomparison split(CURRENT_RECORD_INDICATOR == 1,\n\tdisjoint: false) ~> CIR1@(CIR1)\nfilter2, hashkeyTarget exists(columnhashSRC==columnhashTarget && IntValSRC==IntValTar && URECORD@PRODUCT_ID==ExistingTarget@PRODUCT_ID,\n\tnegate:true,\n\tbroadcast: 'auto')~> UPDATEDRECORD\njoinforstartdate derive(CURRENT_RECORD_INDICATOR = 1,\n\t\tSTART_DATE = addDays(fetch_START_DATE,1),\n\t\tEND_DATE = toDate('9999-12-31'),\n\t\tROW_UPDATED_DATE = addDays(fetch_START_DATE,1)) ~> derivedColumn1\nderivedColumn1 alterRow(insertIf(1==1)) ~> alterRow1\nfilter3, hashkeyTarget join(OLDRECORD@PRODUCT_ID == ExistingTarget@PRODUCT_ID\n\t&& columnhashSRC == columnhashTarget\n\t&& IntValSRC == IntValTar,\n\tjoinType:'right',\n\tbroadcast: 'auto')~> joinOLDRECORD\njoinOLDRECORD filter(isNull(OLDRECORD@PRODUCT_ID) && CURRENT_RECORD_INDICATOR==1) ~> filter1\nfilter1 derive(END_DATE = addDays(currentDate(),-1),\n\t\tSTART_DATE = ExistingTarget@ROW_UPDATED_DATE,\n\t\tCURRENT_RECORD_INDICATOR = 0) ~> derivedColumn2\nderivedColumn2 alterRow(updateIf(1==1)) ~> alterRow2\nURECORD filter(Tar_S_KEY<=MAXSURROGATEKEY && Tar_CURRENT_RECORD_INDICATOR==1) ~> filter2\nderivedColumn2 select(mapColumn(\n\t\tS_KEY,\n\t\tPRODUCT_ID = ExistingTarget@PRODUCT_ID,\n\t\tEND_DATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select3\nselectUPDATED, fetchstartdate join(PRODUCT_ID == fetch_PRODUCT_ID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinforstartdate\nStartDateUpdatesource select(mapColumn(\n\t\tfetch_PRODUCT_ID = PRODUCT_ID,\n\t\tfetch_START_DATE = START_DATE\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> fetchstartdate\nOLDRECORD filter(Tar_S_KEY<=MAXSURROGATEKEY && Tar_CURRENT_RECORD_INDICATOR==1) ~> filter3\nhashkeyTarget select(mapColumn(\n\t\tExists_S_KEY = S_KEY,\n\t\teach(match(true()),\n\t\t\t'Exists_'+$$ = $$)\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select4\naddSDisRUD select(mapColumn(\n\t\tPRODUCT_ID,\n\t\tCATEGORY_ID,\n\t\tCATEGORY_NAME,\n\t\tTITLE,\n\t\tACTOR,\n\t\tPRICE,\n\t\tSPECIAL,\n\t\tCOMMON_PROD_ID,\n\t\tQUAN_IN_STOCK,\n\t\tSALES,\n\t\tROW_INSERTED_DATE,\n\t\tROW_UPDATED_DATE,\n\t\tROW_INSERTED_BY,\n\t\tROW_UPDATED_BY,\n\t\tSTART_DATE,\n\t\tEND_DATE,\n\t\tCURRENT_RECORD_INDICATOR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select5\nConditionalSplit1@EXISTSRECORD select(mapColumn(\n\t\tPRODUCT_ID,\n\t\tCATEGORY_ID,\n\t\tCATEGORY_NAME,\n\t\tTITLE,\n\t\tACTOR,\n\t\tPRICE,\n\t\tSPECIAL,\n\t\tCOMMON_PROD_ID,\n\t\tQUAN_IN_STOCK,\n\t\tSALES,\n\t\tROW_INSERTED_DATE,\n\t\tROW_UPDATED_DATE,\n\t\tROW_INSERTED_BY,\n\t\tROW_UPDATED_BY,\n\t\tcolumnhashSRC,\n\t\tIntValSRC,\n\t\tMAXSURROGATEKEY,\n\t\tTar_S_KEY,\n\t\tTar_PRODUCT_ID,\n\t\tTar_CATEGORY_ID,\n\t\tTar_CATEGORY_NAME,\n\t\tTar_TITLE,\n\t\tTar_ACTOR,\n\t\tTar_PRICE,\n\t\tTar_SPECIAL,\n\t\tTar_COMMON_PROD_ID,\n\t\tTar_QUAN_IN_STOCK,\n\t\tTar_SALES,\n\t\tTar_ROW_INSERTED_DATE,\n\t\tTar_ROW_UPDATED_DATE,\n\t\tTar_ROW_INSERTED_BY,\n\t\tTar_ROW_UPDATED_BY,\n\t\tTar_START_DATE,\n\t\tTar_END_DATE,\n\t\tTar_CURRENT_RECORD_INDICATOR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> OLDRECORD\nConditionalSplit1@EXISTSRECORD select(mapColumn(\n\t\tPRODUCT_ID,\n\t\tCATEGORY_ID,\n\t\tCATEGORY_NAME,\n\t\tTITLE,\n\t\tACTOR,\n\t\tPRICE,\n\t\tSPECIAL,\n\t\tCOMMON_PROD_ID,\n\t\tQUAN_IN_STOCK,\n\t\tSALES,\n\t\tROW_INSERTED_DATE,\n\t\tROW_UPDATED_DATE,\n\t\tROW_INSERTED_BY,\n\t\tROW_UPDATED_BY,\n\t\tcolumnhashSRC,\n\t\tIntValSRC,\n\t\tMAXSURROGATEKEY,\n\t\tTar_S_KEY,\n\t\tTar_PRODUCT_ID,\n\t\tTar_CATEGORY_ID,\n\t\tTar_CATEGORY_NAME,\n\t\tTar_TITLE,\n\t\tTar_ACTOR,\n\t\tTar_PRICE,\n\t\tTar_SPECIAL,\n\t\tTar_COMMON_PROD_ID,\n\t\tTar_QUAN_IN_STOCK,\n\t\tTar_SALES,\n\t\tTar_ROW_INSERTED_DATE,\n\t\tTar_ROW_UPDATED_DATE,\n\t\tTar_ROW_INSERTED_BY,\n\t\tTar_ROW_UPDATED_BY,\n\t\tTar_START_DATE,\n\t\tTar_END_DATE,\n\t\tTar_CURRENT_RECORD_INDICATOR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> URECORD\nUPDATEDRECORD select(mapColumn(\n\t\tPRODUCT_ID,\n\t\tCATEGORY_ID,\n\t\tCATEGORY_NAME,\n\t\tTITLE,\n\t\tACTOR,\n\t\tPRICE,\n\t\tSPECIAL,\n\t\tCOMMON_PROD_ID,\n\t\tQUAN_IN_STOCK,\n\t\tSALES,\n\t\tROW_INSERTED_DATE,\n\t\tROW_UPDATED_DATE,\n\t\tROW_INSERTED_BY,\n\t\tROW_UPDATED_BY,\n\t\tcolumnhashSRC,\n\t\tMAXSURROGATEKEY,\n\t\tTar_S_KEY,\n\t\tTar_PRODUCT_ID,\n\t\tTar_CATEGORY_ID,\n\t\tTar_CATEGORY_NAME,\n\t\tTar_TITLE,\n\t\tTar_ACTOR,\n\t\tTar_PRICE,\n\t\tTar_SPECIAL,\n\t\tTar_COMMON_PROD_ID,\n\t\tTar_QUAN_IN_STOCK,\n\t\tTar_SALES,\n\t\tTar_ROW_INSERTED_DATE,\n\t\tTar_ROW_UPDATED_DATE,\n\t\tTar_ROW_INSERTED_BY,\n\t\tTar_ROW_UPDATED_BY,\n\t\tTar_START_DATE,\n\t\tTar_END_DATE,\n\t\tTar_CURRENT_RECORD_INDICATOR\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectUPDATED\ncsvProducts select(mapColumn(\n\t\tPRODUCT_ID = PROD_ID,\n\t\tCATEGORY_ID,\n\t\tCATEGORY_NAME,\n\t\tTITLE,\n\t\tACTOR,\n\t\tPRICE,\n\t\tSPECIAL,\n\t\tCOMMON_PROD_ID,\n\t\tQUAN_IN_STOCK,\n\t\tSALES,\n\t\tROW_INSERTED_DATE,\n\t\tROW_UPDATED_DATE,\n\t\tROW_INSERTED_BY,\n\t\tROW_UPDATED_BY\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select7\nCategories select(mapColumn(\n\t\tCATEGORY_ID,\n\t\tCATEGORY_NAME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectcategory\nProductTable, selectcategory join(ProductTable@CATEGORY_ID == selectcategory@CATEGORY_ID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinProductCategory\nInventory select(mapColumn(\n\t\tPROD_ID,\n\t\tQUAN_IN_STOCK,\n\t\tSALES\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> selectInventory\njoinProductCategory select(mapColumn(\n\t\tPROD_ID,\n\t\tCATEGORY_ID = ProductTable@CATEGORY_ID,\n\t\tTITLE,\n\t\tACTOR,\n\t\tPRICE,\n\t\tSPECIAL,\n\t\tCOMMON_PROD_ID,\n\t\tROW_INSERTED_DATE,\n\t\tROW_UPDATED_DATE,\n\t\tROW_INSERTED_BY,\n\t\tROW_UPDATED_BY,\n\t\tCATEGORY_NAME\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> select8\nselect8, selectInventory join(select8@PROD_ID == selectInventory@PROD_ID,\n\tjoinType:'left',\n\tbroadcast: 'auto')~> joinProductInventory\njoinProductInventory select(mapColumn(\n\t\tPROD_ID = select8@PROD_ID,\n\t\tCATEGORY_ID,\n\t\tCATEGORY_NAME,\n\t\tTITLE,\n\t\tACTOR,\n\t\tPRICE,\n\t\tSPECIAL,\n\t\tCOMMON_PROD_ID,\n\t\tQUAN_IN_STOCK,\n\t\tSALES,\n\t\tROW_INSERTED_DATE,\n\t\tROW_UPDATED_DATE,\n\t\tROW_INSERTED_BY,\n\t\tROW_UPDATED_BY\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> csvProducts\nProducts select(mapColumn(\n\t\tPROD_ID,\n\t\tCATEGORY_ID,\n\t\tTITLE,\n\t\tACTOR,\n\t\tPRICE,\n\t\tSPECIAL,\n\t\tCOMMON_PROD_ID,\n\t\tROW_INSERTED_DATE,\n\t\tROW_UPDATED_DATE,\n\t\tROW_INSERTED_BY,\n\t\tROW_UPDATED_BY\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> ProductTable\nselect3 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tPRODUCT_ID as integer,\n\t\tSTART_DATE as date\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\ttruncate:true,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 3,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tPRODUCT_ID,\n\t\tSTART_DATE = END_DATE\n\t)) ~> EndDatetobeFetchedagain\nselect5 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tS_KEY as integer,\n\t\tPRODUCT_ID as integer,\n\t\tCATEGORY_ID as integer,\n\t\tCATEGORY_NAME as string,\n\t\tTITLE as string,\n\t\tACTOR as string,\n\t\tPRICE as string,\n\t\tSPECIAL as integer,\n\t\tCOMMON_PROD_ID as integer,\n\t\tQUAN_IN_STOCK as integer,\n\t\tSALES as integer,\n\t\tROW_INSERTED_DATE as date,\n\t\tROW_UPDATED_DATE as date,\n\t\tROW_INSERTED_BY as integer,\n\t\tROW_UPDATED_BY as integer,\n\t\tSTART_DATE as date,\n\t\tEND_DATE as date,\n\t\tCURRENT_RECORD_INDICATOR as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 1,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tPRODUCT_ID,\n\t\tCATEGORY_ID,\n\t\tCATEGORY_NAME,\n\t\tTITLE,\n\t\tACTOR,\n\t\tPRICE,\n\t\tSPECIAL,\n\t\tCOMMON_PROD_ID,\n\t\tQUAN_IN_STOCK,\n\t\tSALES,\n\t\tROW_INSERTED_DATE,\n\t\tROW_UPDATED_DATE,\n\t\tROW_INSERTED_BY,\n\t\tROW_UPDATED_BY,\n\t\tSTART_DATE,\n\t\tEND_DATE,\n\t\tCURRENT_RECORD_INDICATOR\n\t)) ~> InsertNewRecord\nalterRow2 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tS_KEY as integer,\n\t\tPRODUCT_ID as integer,\n\t\tCATEGORY_ID as integer,\n\t\tCATEGORY_NAME as string,\n\t\tTITLE as string,\n\t\tACTOR as string,\n\t\tPRICE as string,\n\t\tSPECIAL as integer,\n\t\tCOMMON_PROD_ID as integer,\n\t\tQUAN_IN_STOCK as integer,\n\t\tSALES as integer,\n\t\tROW_INSERTED_DATE as date,\n\t\tROW_UPDATED_DATE as date,\n\t\tROW_INSERTED_BY as integer,\n\t\tROW_UPDATED_BY as integer,\n\t\tSTART_DATE as date,\n\t\tEND_DATE as date,\n\t\tCURRENT_RECORD_INDICATOR as integer\n\t),\n\tdeletable:false,\n\tinsertable:false,\n\tupdateable:true,\n\tupsertable:false,\n\tkeys:['S_KEY'],\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 2,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tS_KEY,\n\t\tPRODUCT_ID = ExistingTarget@PRODUCT_ID,\n\t\tCATEGORY_ID = ExistingTarget@CATEGORY_ID,\n\t\tCATEGORY_NAME = ExistingTarget@CATEGORY_NAME,\n\t\tTITLE = ExistingTarget@TITLE,\n\t\tACTOR = ExistingTarget@ACTOR,\n\t\tPRICE = ExistingTarget@PRICE,\n\t\tSPECIAL = ExistingTarget@SPECIAL,\n\t\tCOMMON_PROD_ID = ExistingTarget@COMMON_PROD_ID,\n\t\tQUAN_IN_STOCK = ExistingTarget@QUAN_IN_STOCK,\n\t\tSALES = ExistingTarget@SALES,\n\t\tROW_INSERTED_DATE = ExistingTarget@ROW_INSERTED_DATE,\n\t\tROW_UPDATED_DATE = ExistingTarget@ROW_UPDATED_DATE,\n\t\tROW_INSERTED_BY = ExistingTarget@ROW_INSERTED_BY,\n\t\tROW_UPDATED_BY = ExistingTarget@ROW_UPDATED_BY,\n\t\tSTART_DATE,\n\t\tEND_DATE,\n\t\tCURRENT_RECORD_INDICATOR\n\t)) ~> OLDrecordCRI0\nalterRow1 sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tinput(\n\t\tS_KEY as integer,\n\t\tPRODUCT_ID as integer,\n\t\tCATEGORY_ID as integer,\n\t\tCATEGORY_NAME as string,\n\t\tTITLE as string,\n\t\tACTOR as string,\n\t\tPRICE as string,\n\t\tSPECIAL as integer,\n\t\tCOMMON_PROD_ID as integer,\n\t\tQUAN_IN_STOCK as integer,\n\t\tSALES as integer,\n\t\tROW_INSERTED_DATE as date,\n\t\tROW_UPDATED_DATE as date,\n\t\tROW_INSERTED_BY as integer,\n\t\tROW_UPDATED_BY as integer,\n\t\tSTART_DATE as date,\n\t\tEND_DATE as date,\n\t\tCURRENT_RECORD_INDICATOR as integer\n\t),\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tformat: 'table',\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tsaveOrder: 4,\n\terrorHandlingOption: 'stopOnFirstError',\n\tmapColumn(\n\t\tPRODUCT_ID,\n\t\tCATEGORY_ID,\n\t\tCATEGORY_NAME,\n\t\tTITLE,\n\t\tACTOR,\n\t\tPRICE,\n\t\tSPECIAL,\n\t\tCOMMON_PROD_ID,\n\t\tQUAN_IN_STOCK,\n\t\tSALES,\n\t\tROW_INSERTED_DATE,\n\t\tROW_UPDATED_DATE,\n\t\tROW_INSERTED_BY,\n\t\tROW_UPDATED_BY,\n\t\tSTART_DATE,\n\t\tEND_DATE,\n\t\tCURRENT_RECORD_INDICATOR\n\t)) ~> UpdateOldRecord"
		}
	}
}