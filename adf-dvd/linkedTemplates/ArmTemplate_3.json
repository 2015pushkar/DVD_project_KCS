{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-dvd"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/powerquery2')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "df_fact_orderlines",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> df_fact_orderlines",
							"dataset": {
								"referenceName": "df_fact_orderlines",
								"type": "DatasetReference"
							}
						},
						{
							"name": "SQL_o_DIM2",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> SQL_o_DIM2",
							"dataset": {
								"referenceName": "SQL_o_DIM2",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared df_fact_orderlines = let AdfDoc = Sql.Database(\"dvdserverkrtrimaiq.database.windows.net\", \"srcDB_dvd\", [CreateNavigationProperties = false]), InputTable = AdfDoc{[Schema=\"dbo\",Item=\"fact_order_lines\"]}[Data] in InputTable;\r\nshared SQL_o_DIM2 = let AdfDoc = Sql.Database(\"dvdserverkrtrimaiq.database.windows.net\", \"srcDB_dvd\", [CreateNavigationProperties = false]), InputTable = AdfDoc{[Schema=\"dbo\",Item=\"dim_products\"]}[Data] in InputTable;\r\nshared UserQuery = let Source = #\"df_fact_orderlines\",\n  #\"Merged queries\" = Table.NestedJoin(Source, {\"PRODUCT_KEY\"}, SQL_o_DIM2, {\"S_KEY\"}, \"SQL_o_DIM2\", JoinKind.LeftOuter),\n  #\"Expanded SQL_o_DIM2\" = Table.ExpandTableColumn(#\"Merged queries\", \"SQL_o_DIM2\", {\"PRICE\"}, {\"PRICE\"}),\n  #\"Added custom\" = Table.TransformColumnTypes(Table.AddColumn(#\"Expanded SQL_o_DIM2\", \"PRODUCT_PRICE\", each Double.From([PRICE]) * [QUANTITY]), {{\"PRODUCT_PRICE\", type text}}) in #\"Added custom\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_df_fact_orderlines_FnF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_fact_orderlines_FnF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"dimCustomers": {},
									"orders": {},
									"orderlines": {},
									"DimProducts": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-04T05:59:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_df_fact_reorder_FnF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_fact_reorder_FnF",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"REORDER": {},
									"DIMProducts": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-04T05:59:39Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dm_customers_final_FnF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_dm_customers_final",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_DIMcustomer_FnF",
								"type": "DataFlowReference",
								"parameters": {
									"COLUMNS": "'FIRST_NAME,LAST_NAME,ADDRESS1,ADDRESS2,CITY,STATE,EMAIL,CREDIT_CARD_EXPIRATION,USER_NAME,PASSWORD,GENDER'"
								},
								"datasetParameters": {
									"ExistingTarget": {},
									"Targetforcomparison": {},
									"StartDateUpdatesource": {},
									"customers": {},
									"LoginInformation": {},
									"Country": {},
									"Address": {},
									"CreditCard": {},
									"InsertNEWRECORD": {},
									"UPDATEOLDRECORD": {},
									"OLDRECORDCRI0": {},
									"EndDatetobeFetchedagain": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-04T05:59:38Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_dm_products_final_FnF')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "pl_dm_products_final",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_DIMPRODUCTS_FnF",
								"type": "DataFlowReference",
								"parameters": {
									"COLUMNS": "'CATEGORY_NAME,TITLE,ACTOR'"
								},
								"datasetParameters": {
									"ExistingTarget": {},
									"Targetforcomparison": {},
									"StartDateUpdatesource": {},
									"Products": {},
									"Categories": {},
									"Inventory": {},
									"EndDatetobeFetchedagain": {},
									"InsertNewRecord": {},
									"OLDrecordCRI0": {},
									"UpdateOldRecord": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-03-04T05:59:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_fact_order_lines_price_added')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Data flow1",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "df_fact_order_lines_price_added",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"factorderlines": {},
									"dimproducts": {},
									"sink1": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_power_query_transformations')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Power Query2",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "powerquery2",
								"type": "DataFlowReference",
								"datasetParameters": {
									"df_fact_orderlines": {},
									"SQL_o_DIM2": {},
									"UserQuerystoragepowerquery": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQuerystoragepowerquery",
											"dataset": {
												"referenceName": "storagepowerquery",
												"type": "DatasetReference",
												"parameters": {}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['output01.txt'],\n\tmapColumn(\n\t\tORDER_LINE_ID,\n\t\tORDER_ID,\n\t\tCUSTOMER_KEY,\n\t\tPRODUCT_KEY,\n\t\tQUANTITY,\n\t\tORDER_DATE,\n\t\tNET_AMOUNT,\n\t\tTAX_MONEY,\n\t\tTOTAL_AMOUNT,\n\t\tROW_INSERTED_DATE,\n\t\tROW_INSERTED_BY,\n\t\tPRICE,\n\t\tPRODUCT_PRICE\n\t),\n\tpartitionBy('hash', 1)) ~> UserQuerystoragepowerquery"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/powerquery2')]"
			]
		}
	]
}